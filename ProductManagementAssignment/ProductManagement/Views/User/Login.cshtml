@model ProductManagement.Models.Accounts
@{
    Layout = null;
    ViewBag.Title = "Login";
    Html.EnableClientValidation(true);
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/Login.css" />
</head>
<body class="d-flex justify-content-center align-items-center vh-100 vw-100">
    <div class="form-container p-3">
        @using (Html.BeginForm("login", "User", FormMethod.Post, new { @class = "w-100" }))
        {
            @Html.AntiForgeryToken()
            <div class="d-flex justify-content-center align-items-center flex-column">
                <h2 class="header mt-2 mb-4 mx-auto">Login</h2>
                <div class="form-group d-flex flex-column justify-content-center align-items-center">
                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control input-field", placeholder = "Username", autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "validation-message" })
                </div>
                <div class="form-group d-flex flex-column justify-content-center align-items-center">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control input-field", placeholder = "Password", autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "validation-message" })
                </div>
                <div class="error-group d-flex justify-content-center align-items-center flex-column">
                    @Html.ValidationSummary(true, "", new { @class = "validation-message" })
                    @Html.ValidationMessage("loginError", new { @class = "validation-message" })
                </div>
                <div class="form-group d-flex flex-column justify-content-center align-items-center mt-3">
                    <button type="submit" class="btn btn-primary login-button">Login</button>
                </div>
            </div>
        }
    </div>
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000" data-animation="false">
        <div class="toast-header">
            <p class="mr-auto font-weight-bold m-0">Logged Out !!</p>
            <button type="button" class="ml-3 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="toast-body">
            <p class="m-0">Your have successfully Logged Out.</p>
        </div>
    </div>
    <script src="~/Scripts/jquery-3.5.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        if ("@TempData.ContainsKey("freshLogout")" == "True") {
            if ("@TempData.Peek("freshLogout")" == "True") {
                $(".toast").toast("show");
                @TempData.Remove("freshLogout")
            }

        }
    </script>
</body>
</html>
